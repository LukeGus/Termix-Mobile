name: Build App
on:
  workflow_dispatch:
    inputs:
      platform:
        type: choice
        description: Platform to build for
        options:
          - both
          - ios
          - android
      action:
        type: choice
        description: What to do with the built app
        options:
          - submit
          - file
          - none
        required: true
jobs:
  build:
    runs-on: ${{ matrix.platform == 'ios' && 'macos-26' || 'blacksmith-4vcpu-ubuntu-2404' }}
    strategy:
      matrix:
        platform: ${{ github.event.inputs.platform == 'both' && fromJSON('["ios", "android"]') || fromJSON(format('["{0}"]', github.event.inputs.platform)) }}
        node: [20.x]
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: 🏗 Setup Expo and EAS
        uses: expo/expo-github-action@v7
        with:
          token: ${{ secrets.EXPO_TOKEN }}
          expo-version: latest
          eas-version: latest

      - name: 📦 Install dependencies
        run: npm install

      - name: 🔍 Validate EAS configuration
        run: |
          echo "EAS configuration:"
          cat eas.json
          echo "Validating configuration..."
          eas build:configure --platform ${{ matrix.platform }}

      - name: 👷 Build app
        run: |
          # Determine profile based on action
          if [ "${{ github.event.inputs.action }}" = "submit" ]; then
            PROFILE="production"
          else
            PROFILE="preview"
          fi

          echo "Building for platform: ${{ matrix.platform }}"
          echo "Using profile: $PROFILE"

          eas build --local \
            --non-interactive \
            --clear-cache \
            --platform=${{ matrix.platform }} \
            --profile=$PROFILE
        env:
          EAS_SKIP_AUTO_FINGERPRINT: 1

      - name: 📁 Detect and catalog build artifacts
        id: detect-artifacts
        run: |
          echo "Searching for build artifacts..."

          # Create a directory to collect all artifacts
          mkdir -p build-artifacts

          # Find and copy all APK/AAB files
          if [ "${{ matrix.platform }}" = "android" ]; then
            echo "Searching for Android build files..."
            find android/app/build/outputs -type f \( -name "*.apk" -o -name "*.aab" \) 2>/dev/null | while read file; do
              echo "Found: $file"
              cp "$file" build-artifacts/
            done

            # List all found Android build files
            echo "=== Android Build Artifacts ==="
            ls -lh build-artifacts/*.apk 2>/dev/null || echo "No APK files found"
            ls -lh build-artifacts/*.aab 2>/dev/null || echo "No AAB files found"
          fi

          # Find and copy all IPA files
          if [ "${{ matrix.platform }}" = "ios" ]; then
            echo "Searching for iOS IPA files..."
            find . -type f -name "*.ipa" -not -path "*/node_modules/*" 2>/dev/null | while read file; do
              echo "Found: $file"
              cp "$file" build-artifacts/
            done

            echo "=== iOS Build Artifacts ==="
            ls -lh build-artifacts/*.ipa 2>/dev/null || echo "No IPA files found"
          fi

          # Count total artifacts
          ARTIFACT_COUNT=$(ls -1 build-artifacts/ 2>/dev/null | wc -l)
          echo "Total artifacts found: $ARTIFACT_COUNT"
          echo "artifact_count=$ARTIFACT_COUNT" >> $GITHUB_OUTPUT

      - name: 🚢 Submit to App Store
        if: ${{ github.event.inputs.action == 'submit' }}
        run: |
          if [ "${{ matrix.platform }}" = "android" ]; then
            # For Android production submission, use AAB (App Bundle)
            BUILD_FILE=$(find build-artifacts -name "*.aab" | head -1)

            # Fallback to APK if AAB not found (shouldn't happen in production)
            if [ -z "$BUILD_FILE" ]; then
              BUILD_FILE=$(find build-artifacts -name "*arm64-v8a*.apk" | head -1)
            fi

            if [ -z "$BUILD_FILE" ]; then
              BUILD_FILE=$(find build-artifacts -name "*.apk" | head -1)
            fi
          else
            # For iOS, use the IPA file
            BUILD_FILE=$(find build-artifacts -name "*.ipa" | head -1)
          fi

          if [ -n "$BUILD_FILE" ]; then
            echo "Submitting file: $BUILD_FILE"
            eas submit -p ${{ matrix.platform }} --profile production --path "$BUILD_FILE"
          else
            echo "No build file found to submit"
            exit 1
          fi

      - name: 📤 Upload arm64-v8a APK
        if: ${{ github.event.inputs.action == 'file' && matrix.platform == 'android' }}
        uses: actions/upload-artifact@v4
        with:
          name: android-preview-arm64-v8a
          path: build-artifacts/*arm64-v8a*.apk
          retention-days: 30
          if-no-files-found: warn

      - name: 📤 Upload armeabi-v7a APK
        if: ${{ github.event.inputs.action == 'file' && matrix.platform == 'android' }}
        uses: actions/upload-artifact@v4
        with:
          name: android-preview-armeabi-v7a
          path: build-artifacts/*armeabi-v7a*.apk
          retention-days: 30
          if-no-files-found: warn

      - name: 📤 Upload x86_64 APK
        if: ${{ github.event.inputs.action == 'file' && matrix.platform == 'android' }}
        uses: actions/upload-artifact@v4
        with:
          name: android-preview-x86_64
          path: build-artifacts/*x86_64*.apk
          retention-days: 30
          if-no-files-found: warn

      - name: 📤 Upload iOS IPA
        if: ${{ github.event.inputs.action == 'file' && matrix.platform == 'ios' }}
        uses: actions/upload-artifact@v4
        with:
          name: ios-preview-ipa
          path: build-artifacts/*.ipa
          retention-days: 30
          if-no-files-found: warn
