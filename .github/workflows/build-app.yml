name: Build App
on:
  workflow_dispatch:
    inputs:
      platform:
        type: choice
        description: Platform to build for
        options:
          - both
          - ios
          - android
      action:
        type: choice
        description: What to do with the built app
        options:
          - submit
          - file
          - none
        required: true
jobs:
  build:
    runs-on: ${{ matrix.platform == 'ios' && 'macos-26' || 'blacksmith-4vcpu-ubuntu-2404' }}
    strategy:
      matrix:
        platform: ${{ github.event.inputs.platform == 'both' && fromJSON('["ios", "android"]') || fromJSON(format('["{0}"]', github.event.inputs.platform)) }}
        node: [20.x]
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: 🏗 Setup Expo and EAS
        uses: expo/expo-github-action@v7
        with:
          token: ${{ secrets.EXPO_TOKEN }}
          expo-version: latest
          eas-version: latest

      - name: 📦 Install dependencies
        run: npm install

      - name: 🔍 Validate EAS configuration
        run: |
          echo "EAS configuration:"
          cat eas.json
          echo "Validating configuration..."
          eas build:configure --platform ${{ matrix.platform }}

      - name: 👷 Build app
        run: |
          # Determine profile based on action
          if [ "${{ github.event.inputs.action }}" = "submit" ]; then
            PROFILE="production"
          else
            PROFILE="preview"
          fi

          echo "Building for platform: ${{ matrix.platform }}"
          echo "Using profile: $PROFILE"

          eas build --local \
            --non-interactive \
            --clear-cache \
            --platform=${{ matrix.platform }} \
            --profile=$PROFILE
        env:
          EAS_SKIP_AUTO_FINGERPRINT: 1

      - name: 📁 Detect and catalog build artifacts
        id: detect-artifacts
        run: |
          echo "Searching for build artifacts..."

          # Create a directory to collect all artifacts
          mkdir -p build-artifacts

          # Find and rename Android files
          if [ "${{ matrix.platform }}" = "android" ]; then
            echo "=== Detecting Android APKs ==="

            # EAS creates APKs in android/app/build/outputs/apk/release/
            APK_DIR="android/app/build/outputs/apk/release"

            if [ -d "$APK_DIR" ]; then
              echo "✓ Found APK directory: $APK_DIR"
              echo "Contents:"
              ls -lh "$APK_DIR"

              # Check for custom-named split APKs (Termix-Android-{abi}.apk)
              if ls "$APK_DIR"/Termix-Android-*.apk 2>/dev/null | grep -q .; then
                echo "Found custom-named split APKs!"
                for apk in "$APK_DIR"/Termix-Android-*.apk; do
                  filename=$(basename "$apk")
                  echo "Copying: $apk -> build-artifacts/$filename"
                  cp "$apk" "build-artifacts/$filename"
                done
              # Check for standard Gradle split APKs (app-{abi}-release.apk or app-universal-release.apk)
              elif ls "$APK_DIR"/app-*-release.apk 2>/dev/null | grep -q .; then
                echo "Found standard split APKs!"
                for apk in "$APK_DIR"/app-*-release.apk; do
                  filename=$(basename "$apk")

                  # Extract architecture from filename
                  if [[ "$filename" =~ app-([^-]+)-release\.apk ]]; then
                    arch="${BASH_REMATCH[1]}"

                    # Skip universal if we have architecture-specific ones
                    if [ "$arch" = "universal" ]; then
                      echo "Skipping universal APK (using architecture-specific ones)"
                      continue
                    fi

                    new_name="Termix-Android-${arch}.apk"
                    echo "Copying split APK: $apk -> build-artifacts/$new_name"
                    cp "$apk" "build-artifacts/$new_name"
                  fi
                done
              # Check for single universal APK (app-release.apk)
              elif [ -f "$APK_DIR/app-release.apk" ]; then
                echo "Found universal APK (no splits generated)"
                cp "$APK_DIR/app-release.apk" "build-artifacts/Termix-Android-universal.apk"
              else
                echo "No APKs found in $APK_DIR"
              fi

              # For production builds, check for AAB (only for submit, not upload)
              if [ "${{ github.event.inputs.action }}" = "submit" ]; then
                AAB_DIR="android/app/build/outputs/bundle/release"
                if [ -f "$AAB_DIR/app-release.aab" ]; then
                  echo "Found AAB for submission"
                  cp "$AAB_DIR/app-release.aab" "build-artifacts/Termix-Android.aab"
                fi
              fi
            else
              echo "✗ APK directory not found: $APK_DIR"
            fi

            # List final artifacts
            echo "=== Final Build Artifacts ==="
            ls -lh build-artifacts/ 2>/dev/null || echo "No artifacts found"
          fi

          # Find and rename iOS IPA
          if [ "${{ matrix.platform }}" = "ios" ]; then
            echo "Searching for iOS IPA files..."
            IPA_FILE=$(find . -type f -name "*.ipa" -not -path "*/node_modules/*" 2>/dev/null | head -1)

            if [ -n "$IPA_FILE" ]; then
              echo "Found IPA: $IPA_FILE"
              cp "$IPA_FILE" "build-artifacts/Termix-iOS.ipa"
              echo "Renamed to: Termix-iOS.ipa"
            else
              echo "No IPA file found"
            fi

            echo "=== iOS Build Artifacts ==="
            ls -lh build-artifacts/*.ipa 2>/dev/null || echo "No IPA files found"
          fi

          # Count total artifacts
          ARTIFACT_COUNT=$(ls -1 build-artifacts/ 2>/dev/null | wc -l)
          echo "Total artifacts found: $ARTIFACT_COUNT"
          echo "artifact_count=$ARTIFACT_COUNT" >> $GITHUB_OUTPUT

      - name: 🚢 Submit to App Store
        if: ${{ github.event.inputs.action == 'submit' }}
        run: |
          if [ "${{ matrix.platform }}" = "android" ]; then
            # For Android production submission, use AAB (required by Google Play)
            if [ -f "build-artifacts/Termix-Android.aab" ]; then
              BUILD_FILE="build-artifacts/Termix-Android.aab"
              echo "Using AAB for Play Store submission"
            else
              echo "ERROR: AAB not found for production submission"
              echo "Play Store requires AAB format for submissions"
              exit 1
            fi
          else
            # For iOS, use the IPA file
            BUILD_FILE="build-artifacts/Termix-iOS.ipa"
          fi

          if [ -n "$BUILD_FILE" ] && [ -f "$BUILD_FILE" ]; then
            echo "Submitting file: $BUILD_FILE"
            eas submit -p ${{ matrix.platform }} --profile production --path "$BUILD_FILE"
          else
            echo "No build file found to submit"
            exit 1
          fi

      - name: 📤 Upload arm64-v8a APK
        if: ${{ github.event.inputs.action == 'file' && matrix.platform == 'android' }}
        uses: actions/upload-artifact@v4
        with:
          name: Termix-Android-arm64-v8a
          path: build-artifacts/Termix-Android-arm64-v8a.apk
          retention-days: 30
          if-no-files-found: warn

      - name: 📤 Upload armeabi-v7a APK
        if: ${{ github.event.inputs.action == 'file' && matrix.platform == 'android' }}
        uses: actions/upload-artifact@v4
        with:
          name: Termix-Android-armeabi-v7a
          path: build-artifacts/Termix-Android-armeabi-v7a.apk
          retention-days: 30
          if-no-files-found: warn

      - name: 📤 Upload x86_64 APK
        if: ${{ github.event.inputs.action == 'file' && matrix.platform == 'android' }}
        uses: actions/upload-artifact@v4
        with:
          name: Termix-Android-x86_64
          path: build-artifacts/Termix-Android-x86_64.apk
          retention-days: 30
          if-no-files-found: warn

      - name: 📤 Upload iOS IPA
        if: ${{ github.event.inputs.action == 'file' && matrix.platform == 'ios' }}
        uses: actions/upload-artifact@v4
        with:
          name: Termix-iOS
          path: build-artifacts/Termix-iOS.ipa
          retention-days: 30
          if-no-files-found: warn
