name: Build App
on:
  workflow_dispatch:
    inputs:
      platform:
        type: choice
        description: Platform to build for
        options:
          - both
          - ios
          - android
      action:
        type: choice
        description: What to do with the built app
        options:
          - submit
          - file
          - none
        required: true
jobs:
  build:
    runs-on: ${{ matrix.platform == 'ios' && 'macos-26' || 'blacksmith-4vcpu-ubuntu-2404' }}
    strategy:
      matrix:
        platform: ${{ github.event.inputs.platform == 'both' && fromJSON('["ios", "android"]') || fromJSON(format('["{0}"]', github.event.inputs.platform)) }}
        node: [20.x]
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ matrix.node }}
          cache: 'npm'

      - name: 🏗 Setup Expo and EAS
        uses: expo/expo-github-action@v7
        with:
          token: ${{ secrets.EXPO_TOKEN }}
          expo-version: latest
          eas-version: latest

      - name: 📦 Install dependencies
        run: npm install

      - name: 🔍 Validate EAS configuration
        run: |
          echo "EAS configuration:"
          cat eas.json
          echo "Validating configuration..."
          eas build:configure --platform ${{ matrix.platform }}

      - name: 👷 Build app
        run: |
          # Determine profile based on action
          if [ "${{ github.event.inputs.action }}" = "submit" ]; then
            PROFILE="production"
          else
            PROFILE="preview"
          fi

          echo "Building for platform: ${{ matrix.platform }}"
          echo "Using profile: $PROFILE"

          # Create artifacts directory before build
          mkdir -p build-artifacts

          eas build --local \
            --non-interactive \
            --clear-cache \
            --platform=${{ matrix.platform }} \
            --profile=$PROFILE

          # Immediately copy artifacts before EAS cleanup
          if [ "${{ matrix.platform }}" = "android" ]; then
            echo "Searching for APK immediately after build..."
            APK_FILE=$(find /tmp -type f -name "app-release.apk" 2>/dev/null | grep "eas-build-local-nodejs" | head -1)

            if [ -n "$APK_FILE" ]; then
              echo "Found APK: $APK_FILE"
              cp "$APK_FILE" "build-artifacts/Termix-Android-universal.apk"
              echo "Copied to build-artifacts/Termix-Android-universal.apk"
            else
              echo "Warning: APK not found immediately after build"
            fi

            # Also search for AAB if production build
            if [ "$PROFILE" = "production" ]; then
              AAB_FILE=$(find /tmp -type f -name "app-release.aab" 2>/dev/null | grep "eas-build-local-nodejs" | head -1)
              if [ -n "$AAB_FILE" ]; then
                echo "Found AAB: $AAB_FILE"
                cp "$AAB_FILE" "build-artifacts/Termix-Android.aab"
              fi
            fi
          elif [ "${{ matrix.platform }}" = "ios" ]; then
            echo "Searching for IPA immediately after build..."
            IPA_FILE=$(find . -type f -name "*.ipa" -not -path "*/node_modules/*" 2>/dev/null | head -1)

            if [ -n "$IPA_FILE" ]; then
              echo "Found IPA: $IPA_FILE"
              cp "$IPA_FILE" "build-artifacts/Termix-iOS.ipa"
              echo "Copied to build-artifacts/Termix-iOS.ipa"
            else
              echo "Warning: IPA not found immediately after build"
            fi
          fi
        env:
          EAS_SKIP_AUTO_FINGERPRINT: 1

      - name: 📁 Verify build artifacts
        id: detect-artifacts
        run: |
          echo "=== Build Artifacts ==="

          if [ -d "build-artifacts" ]; then
            echo "Contents of build-artifacts/:"
            ls -lh build-artifacts/ 2>/dev/null || echo "Directory exists but is empty"

            # Count artifacts
            ARTIFACT_COUNT=$(ls -1 build-artifacts/ 2>/dev/null | wc -l)
            echo ""
            echo "Total artifacts: $ARTIFACT_COUNT"
          else
            echo "Warning: build-artifacts directory not found"
            mkdir -p build-artifacts
            ARTIFACT_COUNT=0
          fi

          echo "artifact_count=$ARTIFACT_COUNT" >> $GITHUB_OUTPUT

      - name: 🚢 Submit to App Store
        if: ${{ github.event.inputs.action == 'submit' }}
        run: |
          if [ "${{ matrix.platform }}" = "android" ]; then
            # For Android production submission, use AAB (required by Google Play)
            if [ -f "build-artifacts/Termix-Android.aab" ]; then
              BUILD_FILE="build-artifacts/Termix-Android.aab"
              echo "Using AAB for Play Store submission"
            else
              echo "ERROR: AAB not found for production submission"
              echo "Play Store requires AAB format for submissions"
              exit 1
            fi
          else
            # For iOS, use the IPA file
            BUILD_FILE="build-artifacts/Termix-iOS.ipa"
          fi

          if [ -n "$BUILD_FILE" ] && [ -f "$BUILD_FILE" ]; then
            echo "Submitting file: $BUILD_FILE"
            eas submit -p ${{ matrix.platform }} --profile production --path "$BUILD_FILE"
          else
            echo "No build file found to submit"
            exit 1
          fi

      - name: 📤 Upload Android APK
        if: ${{ github.event.inputs.action == 'file' && matrix.platform == 'android' }}
        uses: actions/upload-artifact@v4
        with:
          name: Termix-Android
          path: build-artifacts/Termix-Android-universal.apk
          retention-days: 30
          if-no-files-found: error

      - name: 📤 Upload iOS IPA
        if: ${{ github.event.inputs.action == 'file' && matrix.platform == 'ios' }}
        uses: actions/upload-artifact@v4
        with:
          name: Termix-iOS
          path: build-artifacts/Termix-iOS.ipa
          retention-days: 30
          if-no-files-found: error
